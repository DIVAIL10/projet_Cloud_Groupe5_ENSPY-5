name: CI/CD for Node.js To-Do List on Docker (Ubuntu)

on:
  push:
    branches:
      - node

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Étape 1 : Cloner le dépôt
      - name: Checkout code
        uses: actions/checkout@v3

      # Étape 2 : Installer Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16

      # Étape 3 : Installer les dépendances
      - name: Install dependencies
        run: |
          npm install

      # Étape 4 : Exécuter les tests d'intégration
      - name: Run integration tests
        run: npm test -- tests/integration.test.js

      # Étape 5 : Exécuter les tests de fonctionnalité
      - name: Run functionality tests
        run: npm test -- tests/functionality.test.js

      # Étape 6 : Connexion à Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Étape 7 : Construire l'image Docker
      - name: Build Docker image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/node-todolist:latest .

      # Étape 8 : Pousser l'image Docker sur Docker Hub
      - name: Push Docker image
        run: docker push ${{ secrets.DOCKER_USERNAME }}/node-todolist:latest

      # Étape 9 : Déployer sur Ubuntu Server via SSH
      - name: Deploy to Ubuntu Server
        run: |
          ssh -o StrictHostKeyChecking=no user@<IP-MACHINE-UBUNTU> << 'EOF'
            docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
            docker pull ${{ secrets.DOCKER_USERNAME }}/node-todolist:latest
            docker stop node-todolist || true
            docker rm node-todolist || true
            docker run -d -p 3000:3000 --name node-todolist ${{ secrets.DOCKER_USERNAME }}/node-todolist:latest
          EOF
